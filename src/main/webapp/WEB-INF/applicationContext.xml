<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
		destroy-method="close">
		<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url" value="jdbc:postgresql://localhost:5432/csjobs" />
		<property name="username" value="csjobs" />
		<property name="password" value="abcd" />
		<property name="initialSize" value="1" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="csjobs" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<context:annotation-config />

	<tx:annotation-driven />

	<context:component-scan base-package="csjobs.model" />

	
<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
 
    <security:authentication-manager>
        <security:authentication-provider>
            <security:jdbc-user-service data-source-ref="dataSource"
            users-by-username-query="select email as username,password,'true' from users where email=?"
            authorities-by-username-query="select u.email as username,a.role as authority from users u LEFT JOIN authorities a on u.id = a.user_id  where u.email = ? "/>
       		</security:authentication-provider>
    		</security:authentication-manager>
        	<security:http use-expressions="true">
   			<security:form-login
		   		    default-target-url="/finallogin.html" 
			authentication-failure-url="/login123.html" 
			username-parameter="username"
			password-parameter="password" />
			<security:logout logout-success-url="/"  />
			
			<security:intercept-url pattern="/application/**" access="authenticated" />
			<security:intercept-url pattern="/applicant.html" access="authenticated" />
			<security:intercept-url pattern="/application/viewForApplicant.html" access="authenticated" />
			<security:intercept-url pattern="/application/viewForReviewer.html" access="hasRole('ROLE_REVIEWER')" />
			<security:intercept-url pattern="/reviewer/reviewerview.html" access="hasRole('ROLE_REVIEWER')" />
			<security:intercept-url pattern="/reviewer/rereviewerview.html" access="hasRole('ROLE_REVIEWER')" />
    		<security:intercept-url pattern="/job/viewjobAdmin.html" access="hasRole('ROLE_ADMIN')" />
    		<security:intercept-url pattern="/job/create.html" access="hasRole('ROLE_ADMIN')" />
        	<security:intercept-url pattern="/job/edit.html" access="hasRole('ROLE_ADMIN')" />
        	<security:intercept-url pattern="/admin.html" access="hasRole('ROLE_ADMIN')" />
        	<security:intercept-url pattern="/application/viewForAdmin.html" access="hasRole('ROLE_ADMIN')" />
        	
        	
        	
    		</security:http>
			<security:global-method-security pre-post-annotations="enabled"/>
</beans>
